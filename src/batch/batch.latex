\documentclass{article}
\newenvironment{tightitemize}%
{\begin{itemize}%
\setlength{\itemsep}{0pt}%
\setlength{\parskip}{0pt}}%
{\end{itemize}}
\title{Gsk Batch Processing System}
\author{Dave Benson}
\frenchspacing
\usepackage{amsfonts,amsmath,amssymb,epsfig,eucal,synttree}
\pagestyle{headings}
\begin{document}
\maketitle

\section{Overview}
Often one wants to process really large datasets,
for example logs generated by a family of webservers.

The Gsk Batch Processing System contains elements
similar to google's map/reduce framework.

\section{Storage API}
The client which wants to create a file
must ask the manager for an id and provide any file metadata.

The client is responsible for writing the file to three locations.
Once done, the nodes will transmit the md5sums to the manager.
After that, the file is registered.

The manager can tell any node to copy a file from one to another.
So if a node goes down we begin doing a lot of copies to
transfer the data.

\begin{tightitemize}
\item client to manager: \verb|REQUEST_UPLOAD|.
\item manager to worker (x3): \verb|EXPECT_UPLOAD|.
\item worker to manager (x3): \verb|EXPECTING_UPLOAD|.
\item manager to client: \verb|BEGIN_UPLOAD|.
\item client to worker: connect, \verb|UPLOAD_HEADER|.
follow by tons of \verb|FILE_DATA|.
\item worker to manager (x3): \verb|UPLOAD_DONE|.
\item client to manager: \verb|DONE_UPLOADING|.
\item manager to client: \verb|UPLOAD_SUCCEEDED| or \verb|UPLOAD_FAILED|.
\end{tightitemize}

\section{Map/Reduce}

\subsection{Order-Preserving Maps}

\section{Collation}

\end{document}
